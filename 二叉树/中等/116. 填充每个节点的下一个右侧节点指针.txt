2022 05 13
题目：给定一个 完美二叉树 ，其所有叶子节点都在同一层，每个父节点都有两个子节点。二叉树定义如下：
struct Node {
  int val;
  Node *left;
  Node *right;
  Node *next;
}填充它的每个 next 指针，让这个指针指向其下一个右侧节点。如果找不到下一个右侧节点，则将 next 指针设置为 NULL。初始状态下，所有next指针都被设置为 NULL。
代码：
class Solution {
public:
    Node* connect(Node* root) {
        if(!root)
            return root;
        queue<Node*> q;
        q.push(root);
        while(!q.empty()){
            int n=q.size();
            for(int i=0;i<n;i++){
                Node* zhen=q.front();
                q.pop();
                if(i<n-1)
                    zhen->next=q.front();
                if(zhen->left)
                    q.push(zhen->left);
                if(zhen->right)
                    q.push(zhen->right);
            }
        }
    return root;
    }
};
