中等 未通过(这种题对c++选手很不友好)
2022 05 31
题目：句子 是由若干个单词组成的字符串，单词之间用单个空格分隔，其中每个单词可以包含数字、小写字母、和美元符号 '$' 。如果单词的形式为美元符号后跟着一个非负实数，那么这个单词就表示一个价格。例如 "$100"、"$23" 和 "$6.75" 表示价格，而 "100"、"$" 和 "2$3" 不是。注意：本题输入中的价格均为整数。给你一个字符串 sentence 和一个整数 discount 。对于每个表示价格的单词，都在价格的基础上减免 discount% ，并更新该单词到句子中。所有更新后的价格应该表示为一个恰好保留小数点后两位的数字。返回表示修改后句子的字符串。
思路：用ok函数来判断每个字符是否是符合要求的价钱，然后用stringstream ss(sentence)将sentence按空格分隔开保存在ss中，然后ss>>s s读取ss中的每个子字符串，另外，输出的数字保留两位数字比较困难，用num=num%100和to_string(num/10)+to_string(num%10)得到一位和第二位小数，然后返回。
代码：
class Solution {
public:
    bool ok(string &s){
        if(s[0]=='$'&&s.size()==1)
            return false;
        else if(s[0]=='$'){
            for(int i=1;i<s.size();i++){
                if(s[i]>'9'||s[i]<'0'){
                    return false;
                }
            }
            return true;
        }
        return false;
    }
    string discountPrices(string sentence, int discount) {
        stringstream ss(sentence);
        string s;
        bool flag=0;
        discount=100-discount;
        string ans;
        while(ss>>s){
            if(flag)
                ans+=' ';
            flag=1;
            if(ok(s)){
                long long num=0;
                for(int i=1;i<s.size();i++){
                    num=10*num+s[i]-'0';
                }
                num=num*discount;
                ans+='$'+to_string(num/100)+'.';
                num=num%100;
                if(num==0){
                    ans+="00";
                }
                else{
                    ans+=to_string(num/10)+to_string(num%10);
                }
            }
            else{
                ans+=s;
            }
        }
        return ans;
    }
};
