2022 05 25
题目：给定单链表的头节点 head ，将所有索引为奇数的节点和索引为偶数的节点分别组合在一起，然后返回重新排序的列表。第一个节点的索引被认为是奇数 ， 第二个节点的索引为 偶数 ，以此类推。请注意，偶数组和奇数组内部的相对顺序应该与输入时保持一致。你必须在 O(1) 的额外空间复杂度和 O(n) 的时间复杂度下解决这个问题。
思路：两个链表，一个维持奇数链表，一个维持偶数链表，然后将两个拼接
代码：
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) {
        ListNode* ji=new ListNode(0);
        ListNode* jishu=ji;
        ListNode* ou=new ListNode(0);
        ListNode* oushu=ou;
        int num=1;
        while(head){
            if(num%2==1){
                ji->next=head;
                ji=ji->next;
            }
            else{
                ou->next=head;
                ou=ou->next;
            }
            head=head->next;
            num++;
        }
        ji->next=oushu->next;
        ou->next=nullptr;
        return jishu->next;
    }
};
