2022 05 25
题目：给你两个非空链表来代表两个非负整数。数字最高位位于链表开始位置。它们的每个节点只存储一位数字。将这两数相加会返回一个新的链表。你可以假设除了数字0之外，这两个数字都不会以零开头。
思路：先反转，再相加，再反转
代码：
class Solution {
public:
    ListNode* reverse(ListNode* list1){
        ListNode* pre=nullptr;
        ListNode* curr=list1;
        while(curr){
            ListNode* temp=curr->next;
            curr->next=pre;
            pre=curr;
            curr=temp;
        }
        return pre;
    }
    ListNode* add(ListNode* l1, ListNode* l2) {
        ListNode* ans=new ListNode(0);
        ListNode* p=ans;
        int curr=0;
        while(l1||l2){
            int n1=l1?l1->val:0;
            int n2=l2?l2->val:0;
            int sum=n1+n2+curr;
            p->next=new ListNode(sum%10);
            p=p->next;
            curr=sum/10;
            if(l1)
                l1=l1->next;
            if(l2)
                l2=l2->next;
        }
        if(curr>0)
            p->next=new ListNode(curr);
        ListNode* res=ans->next;
        delete ans; 
        return res;
    }
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* p1=reverse(l1);
        ListNode* p2=reverse(l2);
        ListNode* p3=add(p1,p2);
        return reverse(p3);
    }
};
