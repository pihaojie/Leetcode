2022 04 18
题目：一条包含字母 A-Z 的消息通过以下映射进行了编码 ：'A' -> "1"，'B' -> "2"，...，'Z' -> "26"。要解码已编码的消息，所有数字必须基于上述映射的方法，反向映射回字母（可能有多种方法）。例如，"11106" 可以映射为："AAJF" ，将消息分组为 (1 1 10 6)，"KJF" ，将消息分组为 (11 10 6)，注意，消息不能分组为  (1 11 06) ，因为 "06" 不能映射为 "F" ，这是由于 "6" 和 "06" 在映射中并不等价。给你一个只含数字的空字符串 s ，请计算并返回解码方法的总数。题目数据保证答案肯定是一个 32 位的整数。
思路：类似爬楼梯，若第i位为0，前一位不是1或2的情况下直接return false,若前一位为1或后一位为2并且前一位大于0小于7，则此时的方法总数为，到前一位结尾的方法数加上到i位结尾的方法数，然后递归。
代码：
class Solution {
public:
    int numDecodings(string s) {
    if(s[0]=='0')
        return 0;
    int curr=1,pre=1;
    for(int i=1;i<s.size();i++)
    {
        int temp=curr;
        if(s[i]=='0')
        {
            if(s[i-1]=='1'||s[i-1]=='2')
            {
                curr=pre;
            }
            else
            {
                return 0;
            }
        }
        else if(s[i-1]=='1'||(s[i-1]=='2'&&s[i]>='1'&&s[i]<='6'))
        {
            curr=curr+pre;
        }
        pre=temp;
    }
    return curr;
    }
};
