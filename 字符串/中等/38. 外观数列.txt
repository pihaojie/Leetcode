2022 04 18
题目：给定一个正整数 n ，输出外观数列的第 n 项。「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。你可以将其视作是由递归公式定义的数字字符串序列：
countAndSay(1) = "1"，countAndSay(n) 是对 countAndSay(n-1) 的描述，然后转换成另一个数字字符串。
前五项如下：
1.     1
2.     11
3.     21
4.     1211
5.     111221
第一项是数字 1 
描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 "11"
描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 "21"
描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 "1211"
描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 "111221"
要描述 一个数字字符串，首先要将字符串分割为最小数量的组，每个组都由连续的最多相同字符组成。然后对于每个组，先描述字符的数量，然后描述字符，形成一个描述组。要将描述转换为数字字符串，先将每组中的字符数量用数字替换，再将所有描述组连接起来。
思路：通过快慢指针，慢指针记录第一个相等的位置，快指针向后遍历，找到最后一个相等的位置，然后把快指针和慢指针坐标之差和快指针对应的字符放入字符串中。
收获：快慢指针的用法，整型转为字符型，to_string()
代码：
class Solution {
public:
    string countAndSay(int n) {
    string ans="1";
    if(n==1)
        return ans;
    while(--n)
    {
        int p=0,s=0;
        string temp="";
        while(p<ans.size())
        {
            while(p<ans.size()&&ans[p]==ans[s])
            {
                p++;
            }
            temp+=to_string(p-s)+ans[s];
            s=p;
        }
        ans=temp;
    }
    return ans;
    }
};
