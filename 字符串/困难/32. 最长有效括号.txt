2022 04 18
题目：给你一个只包含 '(' 和 ')' 的字符串，找出最长有效（格式正确且连续）括号子串的长度。
思路：用stack,遇到左括号则入栈，遇到右括号则出栈，若栈为空，说明遇到的右括号大于左括号，则把右括号的坐标入栈，若不为空，则此时长度等于i-栈顶的坐标，栈内提前放入-1，是为了避免左右括号相等时栈为空，判断栈是否为空，为空时把坐标放入栈内，是为了防止连续右括号出现，当再出现左括号时，则栈内只有最近的有括号的坐标。
代码：
class Solution {
public:
    int longestValidParentheses(string s) {
    stack<int> st;
    int num=0;
    st.push(-1);
    for(int i=0;i<s.size();i++)
    {
        if(s[i]=='(')
        {
            st.push(i);
        }
        else
        {
            st.pop();
            if(st.empty())
            {
                st.push(i);
            }
            else{
                num=max(num,i-st.top());
            }
        }
    }
    return num;
    }
};
