2022 05 31
题目：给定一个三角形 triangle ，找出自顶向下的最小路径和。每一步只能移动到下一行中相邻的结点上。相邻的结点 在这里指的是下标与上一层结点下标相同或者等于上一层结点下标+1的两个结点。也就是说，如果正位于当前行的下标 i ，那么下一步可以移动到下一行的下标i或i+1。
思路：构建n×n的二维数组，每行数组的第一个和最后一个值只有一种情况得到，其他值可以由[i-1][j-1]或[i-1][j]得到，再加上该值然后取最大。
代码：
class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int n=triangle.size();
        vector<vector<int>> f(n,vector<int>(n));
        f[0][0]=triangle[0][0];
        for(int i=1;i<n;i++){
            f[i][0]=f[i-1][0]+triangle[i][0];
            for(int j=1;j<i;j++){
                f[i][j]=min(f[i-1][j-1],f[i-1][j])+triangle[i][j];
            }
            f[i][i]=f[i-1][i-1]+triangle[i][i];
        }
        return *min_element(f[n-1].begin(),f[n-1].end());
    }
};
