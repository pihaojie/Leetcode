2022 04 13
题目：给定一个由 整数 组成的 非空 数组所表示的非负整数，在该数的基础上加一。最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。你可以假设除了整数 0 之外，这个整数不会以零开头。
思路：倒着判断，如果末尾不为9，则加1并break，如果末尾为9，则把末尾置为0，如果其他位不为9，则执行一次else后break,如果全为9，则全变成0，因此要判断首位是否为0，若为0，则需在首位insert  1。
代码：
class Solution {
public:
    vector<int> plusOne(vector<int>& digits) {
    for(int i=digits.size()-1;i>=0;i--)
    {
        if(digits[i]==9)
        {
            digits[i]=0;
        }
        else
        {
            digits[i]+=1;
            break;
        }
    }
    if(digits[0]==0)
    {
        digits.insert(digits.begin(),1);
    }
    return digits;
    }
};
