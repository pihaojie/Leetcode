2022 04 07
题目：给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。请必须使用时间复杂度为 O(log n) 的算法。
思路：时间复杂度为 O(log n)即二分法
收获：整型二分法细节真多
代码1：
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
    int n=nums.size();
    int l=0,r=n-1;
    while(l<r)
    {
        int mid=(l+r)/2;
        if(nums[mid]>=target)
        {
            r=mid;
        }
        else
        {
            l=mid+1;
        }
    }
    if(target>nums[n-1])
        l=n;
    return l;
    }
};
代码2：
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
    int l=0,r=nums.size()-1,mid;
    while(l<=r)
    {
        mid=(r+l)/2;
        if(target>nums[mid])
        {
            l=mid+1;
        }
        else
        {
            r=mid-1;
        }
    }
    return l;
    }
};
