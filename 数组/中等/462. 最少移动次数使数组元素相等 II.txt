2022 05 19
题目：给你一个长度为 n 的整数数组 nums ，返回使所有数组元素相等需要的最少移动数。在一步操作中，你可以使数组中的一个元素加 1 或者减 1 。
思路：排序，可直接计算数组到中间值的距离然后相加，因为数组中的最大最小值到target(不论target为几)距离之和不变；或者先计算到第一个数的距离之和，然后减去后面的数乘第二个第一个数之差，加上第一个数到第二个数的距离，即得所有数到第二个数的距离。
代码：
class Solution {
public:
    int minMoves2(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        int a=nums[0],b=nums[nums.size()-1];
        int ans=INT_MAX;
        long num=0;
        for(int i=0;i<nums.size();i++){
            if(i==0){
                for(int j=0;j<nums.size();j++){
                    num+=abs(nums[i]-nums[j]);
                }
            }
            else{
                num+=(nums[i]-nums[i-1])*(i-1);
                num-=(nums[i]-nums[i-1])*(nums.size()-i-1);
            }
            ans=num>=ans?ans:num;
        }
        return ans;
    }
};
