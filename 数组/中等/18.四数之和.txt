2022 04 05
给你一个由 n 个整数组成的数组 nums ，和一个目标值 target 。请你找出并返回满足下述全部条件且不重复的四元组 [nums[a], nums[b], nums[c], nums[d]] （若两个四元组元素一一对应，则认为两个四元组重复）：
思路：和三数之和类似，先排序，不过开始时固定前两个数，后两个数用双指针求出
注意细节：需判断第一个和第二个数和前一个数是否相同，相同则跳过，避免重复计算
第三个第四个数双指针寻找时，用的是while,需在找到后 left++,right--，不然left和right不会变化，且需判断下一个第三个和第四个数和前一个是否相同，若相同，则跳过。
时间复杂度：O(N^3)
代码：
class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, long target) {
    vector<vector<int>>ans;
    sort(nums.begin(),nums.end());
    int n=nums.size();
    for(int i=0;i<n-3;i++)
    {
        if(i>0&&nums[i]==nums[i-1])
            continue;
        for(int j=i+1;j<n-2;j++)
        {
            if(j>i+1&&nums[j]==nums[j-1])
                continue;
            int left=j+1,right=n-1;
            while(left<right)
            {
                if(nums[i]+nums[j]>target-nums[left]-nums[right])
                    right--;
                else if(nums[i]+nums[j]<target-nums[left]-nums[right])
                    left++;
                else
                {
                    ans.push_back({nums[i],nums[j],nums[left],nums[right]});
                    left++,right--;
                    while(left<right&&nums[left]==nums[left-1])
                        left++;
                    while(left<right&&nums[right]==nums[right+1])
                        right--;
                }
            }
        }
    }
    return ans;
    }
};
