2022 04 13
题目：给你一个 无重叠的 ，按照区间起始端点排序的区间列表。在列表中插入一个新的区间，你需要确保列表中的区间仍然有序且不重叠（如果有必要的话，可以合并区间）。
思路：创建bool类型的go，用来判断数据是否被插入，right小于数组中某位的左值，则插入，如果数组的右值小于left,则继续，反之，有交集，则把left取最小，right取最大。
收获：想法好奇妙。
代码：
class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
    vector<vector<int>> ans;
    int left=newInterval[0];
    int right=newInterval[1];
    bool go=false;
    for(const auto& interval:intervals)
    {
        if(interval[0]>right)
        {
            if(!go)
            {
                ans.push_back({left,right});
                go=true;
            }
            ans.push_back(interval);
        }
        else if(interval[1]<left)
        {
            ans.push_back(interval);
        }
        else
        {
            left=min(left,interval[0]);
            right=max(right,interval[1]);
        }
    }
    if (!go)
    {
        ans.push_back({left, right});
    } 
    return ans;
    }
};
